name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_version.outputs.tag_name }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from tag
      id: get_version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        VERSION=${TAG_NAME#v}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$PREV_TAG" ]; then
          # First release
          CHANGELOG="🎉 Initial release of Home Assistant History MCP Server

        ## Features
        - 🏠 Connect to Home Assistant via REST API
        - 📊 Retrieve historical data for entities
        - 📈 Access long-term statistics with configurable periods
        - 🔍 Entity discovery and search capabilities  
        - 📋 Logbook integration for events
        - 🐳 Secure Docker deployment
        - ⏰ Flexible time range support
        - ✅ Comprehensive input validation

        ## Quick Start
        \`\`\`bash
        docker run -e HA_URL=your-ha-url -e HA_TOKEN=your-token ghcr.io/jtenniswood/ha-history-mcp:latest
        \`\`\`"
        else
          # Generate changelog from commits
          CHANGELOG="## What's Changed"
          CHANGELOG="$CHANGELOG"$'\n'"$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --reverse)"
        fi
        
        # Save changelog to file and output
        echo "$CHANGELOG" > CHANGELOG.md
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.tag_name }}
        release_name: Release ${{ steps.get_version.outputs.tag_name }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.tag_name, '-') }}

    - name: Upload docker-compose.yml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./docker-compose.yml
        asset_name: docker-compose.yml
        asset_content_type: text/plain

    - name: Create deployment example
      run: |
        cat > docker-compose.example.yml << 'EOF'
        version: '3.8'
        
        services:
          ha-history-mcp:
            image: ghcr.io/jtenniswood/ha-history-mcp:${{ steps.get_version.outputs.tag_name }}
            container_name: ha-history-mcp-server
            restart: unless-stopped
            
            environment:
              - HA_URL=${HA_URL}
              - HA_TOKEN=${HA_TOKEN}
              - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
              - PYTHONUNBUFFERED=1
              - PYTHONDONTWRITEBYTECODE=1
            
            security_opt:
              - no-new-privileges:true
            
            deploy:
              resources:
                limits:
                  memory: 512M
                  cpus: '0.5'
                reservations:
                  memory: 256M
                  cpus: '0.1'
        EOF

    - name: Upload deployment example
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./docker-compose.example.yml
        asset_name: docker-compose.example.yml
        asset_content_type: text/plain